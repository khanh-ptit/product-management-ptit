extends ../../layouts/default.pug
include ../../mixins/alert.pug

block head
    link(rel="stylesheet" href="/admin/css/order.css")

block content
    +alert-success(5000)
    +alert-error(5000)

    .order-page
        .container-fluid
            .card.shadow.mb-4
                .card-header.py-3
                    h6.m-0.font-weight-bold.text-primary Chỉnh sửa đơn hàng
                .card-body
                    form#orderForm(action=`${prefixAdmin}/orders/edit/${order._id}?_method=PATCH`, method='POST')
                        //- Thông tin khách hàng
                        .form-group
                            label(for='customerName') Tên khách hàng
                            input#customerName.form-control(
                                type='text',
                                name='customerInfo[fullName]',
                                placeholder='Nhập tên khách hàng',
                                value=order.customerInfo.fullName,
                                required
                            )
                        .form-group
                            label(for='customerPhone') Số điện thoại
                            input#customerPhone.form-control(
                                type='tel',
                                name='customerInfo[phone]',
                                placeholder='Nhập số điện thoại',
                                value=order.customerInfo.phone,
                                required
                            )
                        .form-group
                            label(for='customerAddress') Địa chỉ
                            input#customerAddress.form-control(
                                type='text',
                                name='customerInfo[address]',
                                placeholder='Nhập địa chỉ',
                                value=order.customerInfo.address,
                                required
                            )

                        hr

                        //- Danh sách sản phẩm
                        h6.font-weight-bold.text-primary Danh sách sản phẩm
                        .product-list
                            each product, index in order.products
                                .product-item.card.shadow.mb-3
                                    .card-body
                                        .row
                                            .col-md-6
                                                label(for='product_' + index) Sản phẩm
                                                select.form-control(
                                                    id='product_' + index,
                                                    name='products[' + index + '][product_id]',
                                                    data-index=index,
                                                    required
                                                )
                                                    option(value='') -- Chọn sản phẩm --
                                                    each availableProduct in products
                                                        option(
                                                            value=availableProduct._id, 
                                                            selected=(product.product_id.toString() == availableProduct._id.toString()), 
                                                            data-image=availableProduct.thumbnail, 
                                                            data-price=availableProduct.price
                                                        )= availableProduct.title
                                            .col-md-6
                                                label(for='quantity_' + index) Số lượng
                                                input.form-control(
                                                    type="number", 
                                                    name="products[" + index + "][quantity]", 
                                                    id="quantity_" + index,
                                                    placeholder="Nhập số lượng", 
                                                    min="1", 
                                                    value=product.quantity, 
                                                    required
                                                )
                                        .row.mt-3
                                            .col-md-4
                                                img(id="productImage_" + index, class="img-thumbnail",
                                                    src=product.infoProduct ? product.infoProduct.thumbnail : '', 
                                                    alt="Hình ảnh sản phẩm", 
                                                    hidden=!product.infoProduct
                                                )
                                            .col-md-8
                                                h6(id="productPrice_" + index, class="font-weight-bold text-primary hidden")
                                                    | Giá: #{(product.infoProduct && product.infoProduct.price * product.quantity).toLocaleString()} VNĐ

                        button#addProductBtn.btn.btn-info.btn-sm.mt-3(type='button') Thêm sản phẩm

                        hr
                        //- Hiển thị tổng tiền
                        .form-group.text-center
                            h6.font-weight-bold.text-primary Tổng tiền: 
                            span#totalPrice #{order.products.reduce((sum, p) => sum + p.infoProduct.price * p.quantity, 0).toLocaleString()} VNĐ

                        //- Nút hành động
                        .form-group.text-center
                            button.btn.btn-primary.btn-lg.m-2(type='submit') Lưu thay đổi
                            button#resetFormBtn.btn.btn-secondary.btn-lg.m-2(type='button') Làm lại

    script.
        const products = !{JSON.stringify(products)}; // Dữ liệu sản phẩm
        let selectedProducts = []; // Mảng lưu các sản phẩm đã được chọn

        document.addEventListener("DOMContentLoaded", () => {
            const addProductBtn = document.getElementById("addProductBtn");
            const resetFormBtn = document.getElementById("resetFormBtn");
            const productList = document.querySelector(".product-list");
            const orderForm = document.getElementById("orderForm");
            const totalPriceElement = document.getElementById("totalPrice");
            let productIndex = order.products.length; // Bắt đầu từ số lượng sản phẩm hiện có

            // Hàm tính tổng tiền
            const calculateTotalPrice = () => {
                let total = 0;
                document.querySelectorAll(".product-item").forEach((item, index) => {
                    const quantityInput = item.querySelector(`input[name="products[${index}][quantity]"]`);
                    const selectProduct = item.querySelector(`select[name="products[${index}][product_id]"]`);
                    const price = parseFloat(selectProduct.options[selectProduct.selectedIndex].getAttribute('data-price')) || 0;
                    const quantity = parseInt(quantityInput.value) || 0;

                    const productTotalPrice = price * quantity;
                    total += productTotalPrice;

                    const productPriceElement = item.querySelector(`#productPrice_${index}`);
                    productPriceElement.textContent = `Giá: ${productTotalPrice.toLocaleString()} VNĐ`;
                    productPriceElement.classList.remove("hidden");
                });
                totalPriceElement.textContent = `${total.toLocaleString()} VNĐ`;
            };

            // Cập nhật thông tin sản phẩm khi chọn
            productList.addEventListener("change", (event) => {
                if (event.target.tagName === "SELECT") {
                    const selectedOption = event.target.options[event.target.selectedIndex];
                    const index = event.target.dataset.index;
                    const image = selectedOption.getAttribute("data-image");
                    const price = selectedOption.getAttribute("data-price");

                    const productImage = document.getElementById(`productImage_${index}`);
                    const productPriceElement = document.getElementById(`productPrice_${index}`);

                    productImage.src = image || '';
                    productImage.hidden = !image;
                    productPriceElement.textContent = `Giá: ${price} VNĐ`;
                    productPriceElement.classList.remove("hidden");

                    calculateTotalPrice();
                }
            });

            // Tính tổng tiền khi thay đổi số lượng
            productList.addEventListener("input", (event) => {
                if (event.target.type === "number") {
                    calculateTotalPrice();
                }
            });

            // Xử lý thêm sản phẩm
            addProductBtn.addEventListener("click", () => {
                const newProduct = document.createElement("div");
                newProduct.className = "product-item card shadow mb-3";
                newProduct.innerHTML = `
                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-6">
                                <label for="product_${productIndex}">Sản phẩm</label>
                                <select id="product_${productIndex}" class="form-control" name="products[${productIndex}][product_id]" data-index="${productIndex}" required>
                                    <option value="">-- Chọn sản phẩm --</option>
                                    ${products
                                        .filter(product => !selectedProducts.includes(product._id))
                                        .map(
                                            (product) =>
                                                `<option value="${product._id}" data-image="${product.thumbnail}" data-price="${product.price}">${product.title}</option>`
                                        )
                                        .join("")}
                                </select>
                            </div>
                            <div class="col-md-6">
                                <label for="quantity_${productIndex}">Số lượng</label>
                                <input id="quantity_${productIndex}" class="form-control" type="number" name="products[${productIndex}][quantity]" placeholder="Nhập số lượng" min="1" required>
                            </div>
                        </div>
                        <div class="row mt-3">
                            <div class="col-md-4">
                                <img id="productImage_${productIndex}" class="img-thumbnail" src="" alt="Hình ảnh sản phẩm" hidden>
                            </div>
                            <div class="col-md-8">
                                <h6 id="productPrice_${productIndex}" class="font-weight-bold text-primary hidden">Giá: 0 VNĐ</h6>
                            </div>
                        </div>
                    </div>
                `;
                productList.appendChild(newProduct);
                productIndex++;
                updateProductOptions(); // Cập nhật các tùy chọn sản phẩm
            });

            // Xử lý nút Làm lại
            resetFormBtn.addEventListener("click", () => {
                orderForm.reset(); // Reset các trường mặc định
                const productItems = document.querySelectorAll(".product-item");
                productItems.forEach((item, index) => {
                    if (index > 0) item.remove(); // Giữ lại sản phẩm đầu tiên
                });
                productIndex = 1; // Reset chỉ số sản phẩm

                // Ẩn hình ảnh và giá sản phẩm đầu tiên
                document.getElementById("productImage_0").hidden = true;
                document.getElementById("productPrice_0").classList.add("hidden");

                // Reset tổng tiền
                totalPriceElement.textContent = "0 VNĐ";

                // Reset mảng sản phẩm đã chọn
                selectedProducts = [];
            });

            // Cập nhật các tùy chọn sản phẩm trong các dropdown
            const updateProductOptions = () => {
                const selects = document.querySelectorAll('select[name^="products["]');
                selects.forEach(select => {
                    const productId = select.value;
                    Array.from(select.options).forEach(option => {
                        option.disabled = selectedProducts.includes(option.value) && option.value !== productId;
                    });
                });
            };

            // Lần đầu gọi hàm cập nhật sản phẩm
            updateProductOptions();
        });